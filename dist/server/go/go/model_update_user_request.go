/*
 * main
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// UpdateUserRequest - 
type UpdateUserRequest struct {

	I18n []UpdateUserRequestI18nInner `json:"i18n,omitempty"`

	ImageUrl string `json:"imageUrl,omitempty"`

	Pronoun Pronoun `json:"pronoun,omitempty"`

	Birthday string `json:"birthday,omitempty"`

	HideAge bool `json:"hideAge,omitempty"`

	SocialLinks []UpdateUserRequestSocialLinksInner `json:"socialLinks,omitempty"`

	RoomNumber float32 `json:"roomNumber,omitempty"`

	PostNumber float32 `json:"postNumber,omitempty"`

	SelfIntroductionSlideUrl string `json:"selfIntroductionSlideUrl,omitempty"`

	// Airtable's Record IDs
	Generations []string `json:"generations,omitempty"`

	Groups []UpdateUserRequestGroupsInner `json:"groups,omitempty"`

	// 肩書き
	Position string `json:"position,omitempty"`

	// Markdown
	Bio string `json:"bio,omitempty"`

	PhotoUrls []string `json:"photoUrls,omitempty"`

	LastModifiedAt string `json:"lastModifiedAt,omitempty"`
}

// AssertUpdateUserRequestRequired checks if the required fields are not zero-ed
func AssertUpdateUserRequestRequired(obj UpdateUserRequest) error {
	for _, el := range obj.I18n {
		if err := AssertUpdateUserRequestI18nInnerRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.SocialLinks {
		if err := AssertUpdateUserRequestSocialLinksInnerRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Groups {
		if err := AssertUpdateUserRequestGroupsInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseUpdateUserRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UpdateUserRequest (e.g. [][]UpdateUserRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUpdateUserRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUpdateUserRequest, ok := obj.(UpdateUserRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertUpdateUserRequestRequired(aUpdateUserRequest)
	})
}
