/*
 * main
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type UserI18n struct {

	Locale *interface{} `json:"locale"`

	FirstName *interface{} `json:"firstName"`

	LastName *interface{} `json:"lastName"`

	PhoneticFirstName *interface{} `json:"phoneticFirstName,omitempty"`

	PhoneticLastName *interface{} `json:"phoneticLastName,omitempty"`

	NickName *interface{} `json:"nickName,omitempty"`

	MiddleName *interface{} `json:"middleName,omitempty"`

	PhoneticMiddleName *interface{} `json:"phoneticMiddleName,omitempty"`

	MaidenName *interface{} `json:"maidenName,omitempty"`

	Prefix *interface{} `json:"prefix,omitempty"`

	Suffix *interface{} `json:"suffix,omitempty"`
}

// AssertUserI18nRequired checks if the required fields are not zero-ed
func AssertUserI18nRequired(obj UserI18n) error {
	elements := map[string]interface{}{
		"locale": obj.Locale,
		"firstName": obj.FirstName,
		"lastName": obj.LastName,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseUserI18nRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UserI18n (e.g. [][]UserI18n), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUserI18nRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUserI18n, ok := obj.(UserI18n)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertUserI18nRequired(aUserI18n)
	})
}
