/*
 * main
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PostLogin200Response struct {

	AccessToken *interface{} `json:"accessToken"`

	// 初期登録フォーム未回答の場合のみ 
	User User `json:"user,omitempty"`
}

// AssertPostLogin200ResponseRequired checks if the required fields are not zero-ed
func AssertPostLogin200ResponseRequired(obj PostLogin200Response) error {
	elements := map[string]interface{}{
		"accessToken": obj.AccessToken,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertUserRequired(obj.User); err != nil {
		return err
	}
	return nil
}

// AssertRecursePostLogin200ResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PostLogin200Response (e.g. [][]PostLogin200Response), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePostLogin200ResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPostLogin200Response, ok := obj.(PostLogin200Response)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPostLogin200ResponseRequired(aPostLogin200Response)
	})
}
