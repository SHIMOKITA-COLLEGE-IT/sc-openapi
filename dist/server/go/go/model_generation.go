/*
 * main
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// Generation - `Program`, `House`のモデル
type Generation struct {

	// Airtable's Record ID
	Id string `json:"id"`

	Type GenerationType `json:"type"`

	DisplayName string `json:"displayName"`

	From string `json:"from,omitempty"`

	To string `json:"to,omitempty"`

	CoverImageUrl string `json:"coverImageUrl,omitempty"`

	Title string `json:"title,omitempty"`

	// Markdown
	Description string `json:"description,omitempty"`

	PhotoUrls []string `json:"photoUrls,omitempty"`
}

// AssertGenerationRequired checks if the required fields are not zero-ed
func AssertGenerationRequired(obj Generation) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"type": obj.Type,
		"displayName": obj.DisplayName,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseGenerationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Generation (e.g. [][]Generation), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGenerationRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGeneration, ok := obj.(Generation)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGenerationRequired(aGeneration)
	})
}
