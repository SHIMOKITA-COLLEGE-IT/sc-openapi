/*
 * main
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// Pronoun : Enum
type Pronoun string

// List of Pronoun
const (
	SHE_HER Pronoun = "SHE_HER"
	HE_HIM Pronoun = "HE_HIM"
	THEY_THEM Pronoun = "THEY_THEM"
)

// AssertPronounRequired checks if the required fields are not zero-ed
func AssertPronounRequired(obj Pronoun) error {
	return nil
}

// AssertRecursePronounRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Pronoun (e.g. [][]Pronoun), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePronounRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPronoun, ok := obj.(Pronoun)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPronounRequired(aPronoun)
	})
}
