//
// UpdateUserRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct UpdateUserRequest: Codable, JSONEncodable, Hashable {

    public var i18n: [UpdateUserRequestI18nInner]?
    public var imageUrl: String?
    public var pronoun: Pronoun?
    public var birthday: Date?
    public var hideAge: Bool? = false
    public var socialLinks: [UpdateUserRequestSocialLinksInner]?
    public var roomNumber: Double?
    public var postNumber: Double?
    public var selfIntroductionSlideUrl: String?
    /** Airtable's Record IDs */
    public var generations: [String]?
    public var groups: [UpdateUserRequestGroupsInner]?
    /** 肩書き */
    public var position: String?
    /** Markdown */
    public var bio: String?
    public var photoUrls: [String]?
    public var lastModifiedAt: Date?

    public init(i18n: [UpdateUserRequestI18nInner]? = nil, imageUrl: String? = nil, pronoun: Pronoun? = nil, birthday: Date? = nil, hideAge: Bool? = false, socialLinks: [UpdateUserRequestSocialLinksInner]? = nil, roomNumber: Double? = nil, postNumber: Double? = nil, selfIntroductionSlideUrl: String? = nil, generations: [String]? = nil, groups: [UpdateUserRequestGroupsInner]? = nil, position: String? = nil, bio: String? = nil, photoUrls: [String]? = nil, lastModifiedAt: Date? = nil) {
        self.i18n = i18n
        self.imageUrl = imageUrl
        self.pronoun = pronoun
        self.birthday = birthday
        self.hideAge = hideAge
        self.socialLinks = socialLinks
        self.roomNumber = roomNumber
        self.postNumber = postNumber
        self.selfIntroductionSlideUrl = selfIntroductionSlideUrl
        self.generations = generations
        self.groups = groups
        self.position = position
        self.bio = bio
        self.photoUrls = photoUrls
        self.lastModifiedAt = lastModifiedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case i18n
        case imageUrl
        case pronoun
        case birthday
        case hideAge
        case socialLinks
        case roomNumber
        case postNumber
        case selfIntroductionSlideUrl
        case generations
        case groups
        case position
        case bio
        case photoUrls
        case lastModifiedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(i18n, forKey: .i18n)
        try container.encodeIfPresent(imageUrl, forKey: .imageUrl)
        try container.encodeIfPresent(pronoun, forKey: .pronoun)
        try container.encodeIfPresent(birthday, forKey: .birthday)
        try container.encodeIfPresent(hideAge, forKey: .hideAge)
        try container.encodeIfPresent(socialLinks, forKey: .socialLinks)
        try container.encodeIfPresent(roomNumber, forKey: .roomNumber)
        try container.encodeIfPresent(postNumber, forKey: .postNumber)
        try container.encodeIfPresent(selfIntroductionSlideUrl, forKey: .selfIntroductionSlideUrl)
        try container.encodeIfPresent(generations, forKey: .generations)
        try container.encodeIfPresent(groups, forKey: .groups)
        try container.encodeIfPresent(position, forKey: .position)
        try container.encodeIfPresent(bio, forKey: .bio)
        try container.encodeIfPresent(photoUrls, forKey: .photoUrls)
        try container.encodeIfPresent(lastModifiedAt, forKey: .lastModifiedAt)
    }
}

