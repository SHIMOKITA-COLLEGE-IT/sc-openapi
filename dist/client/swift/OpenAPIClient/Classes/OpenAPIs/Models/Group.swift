//
// Group.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** &#x60;Committee&#x60;, &#x60;Club&#x60; */
public struct Group: Codable, JSONEncodable, Hashable {

    public enum ModelType: AnyCodable, Codable, JSONEncodable, CaseIterable {
        case committee = committee
        case club = club
        case project = project
    }
    /** Airtable's Record ID */
    public var id: AnyCodable?
    public var type: ModelType?
    public var displayName: AnyCodable?
    public var createdAt: AnyCodable?
    public var archivedAt: AnyCodable?
    public var emoji: AnyCodable?
    public var title: AnyCodable?
    /** Markdown */
    public var description: AnyCodable?
    public var slackChannel: AnyCodable?
    public var photoUrls: AnyCodable?

    public init(id: AnyCodable?, type: ModelType?, displayName: AnyCodable?, createdAt: AnyCodable? = nil, archivedAt: AnyCodable? = nil, emoji: AnyCodable? = nil, title: AnyCodable? = nil, description: AnyCodable? = nil, slackChannel: AnyCodable? = nil, photoUrls: AnyCodable? = nil) {
        self.id = id
        self.type = type
        self.displayName = displayName
        self.createdAt = createdAt
        self.archivedAt = archivedAt
        self.emoji = emoji
        self.title = title
        self.description = description
        self.slackChannel = slackChannel
        self.photoUrls = photoUrls
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case type
        case displayName
        case createdAt
        case archivedAt
        case emoji
        case title
        case description
        case slackChannel
        case photoUrls
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(type, forKey: .type)
        try container.encode(displayName, forKey: .displayName)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(archivedAt, forKey: .archivedAt)
        try container.encodeIfPresent(emoji, forKey: .emoji)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(slackChannel, forKey: .slackChannel)
        try container.encodeIfPresent(photoUrls, forKey: .photoUrls)
    }
}

