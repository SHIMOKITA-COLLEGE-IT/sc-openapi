/* tslint:disable */
/* eslint-disable */
/**
 * College App API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SocialBrand
 */
export interface SocialBrand {
    /**
     * Airtable's Record ID
     * @type {string}
     * @memberof SocialBrand
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SocialBrand
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SocialBrand
     */
    svgIconUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof SocialBrand
     */
    urlPrefix?: string;
    /**
     * 
     * @type {string}
     * @memberof SocialBrand
     */
    formPrefix?: string;
}

/**
 * Check if a given object implements the SocialBrand interface.
 */
export function instanceOfSocialBrand(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function SocialBrandFromJSON(json: any): SocialBrand {
    return SocialBrandFromJSONTyped(json, false);
}

export function SocialBrandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SocialBrand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'svgIconUrl': !exists(json, 'svgIconUrl') ? undefined : json['svgIconUrl'],
        'urlPrefix': !exists(json, 'urlPrefix') ? undefined : json['urlPrefix'],
        'formPrefix': !exists(json, 'formPrefix') ? undefined : json['formPrefix'],
    };
}

export function SocialBrandToJSON(value?: SocialBrand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'svgIconUrl': value.svgIconUrl,
        'urlPrefix': value.urlPrefix,
        'formPrefix': value.formPrefix,
    };
}

