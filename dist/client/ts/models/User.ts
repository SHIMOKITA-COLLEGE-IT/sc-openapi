/* tslint:disable */
/* eslint-disable */
/**
 * College App API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Generation } from './Generation';
import {
    GenerationFromJSON,
    GenerationFromJSONTyped,
    GenerationToJSON,
} from './Generation';
import type { Pronoun } from './Pronoun';
import {
    PronounFromJSON,
    PronounFromJSONTyped,
    PronounToJSON,
} from './Pronoun';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
} from './Role';
import type { UserGroupBelonging } from './UserGroupBelonging';
import {
    UserGroupBelongingFromJSON,
    UserGroupBelongingFromJSONTyped,
    UserGroupBelongingToJSON,
} from './UserGroupBelonging';
import type { UserI18n } from './UserI18n';
import {
    UserI18nFromJSON,
    UserI18nFromJSONTyped,
    UserI18nToJSON,
} from './UserI18n';
import type { UserSocialLink } from './UserSocialLink';
import {
    UserSocialLinkFromJSON,
    UserSocialLinkFromJSONTyped,
    UserSocialLinkToJSON,
} from './UserSocialLink';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * Airtable's Record ID
     * @type {string}
     * @memberof User
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * 
     * @type {Role}
     * @memberof User
     */
    role: Role;
    /**
     * 
     * @type {Array<UserI18n>}
     * @memberof User
     */
    i18n: Array<UserI18n>;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    imageUrl?: string;
    /**
     * 
     * @type {Pronoun}
     * @memberof User
     */
    pronoun?: Pronoun;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    birthday?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    hideAge?: boolean;
    /**
     * 
     * @type {Array<UserSocialLink>}
     * @memberof User
     */
    socialLinks?: Array<UserSocialLink>;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    roomNumber?: number;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    postNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    selfIntroductionSlideUrl?: string;
    /**
     * 
     * @type {Array<Generation>}
     * @memberof User
     */
    programs?: Array<Generation>;
    /**
     * 
     * @type {Array<Generation>}
     * @memberof User
     */
    houses?: Array<Generation>;
    /**
     * 
     * @type {Array<UserGroupBelonging>}
     * @memberof User
     */
    committees?: Array<UserGroupBelonging>;
    /**
     * 
     * @type {Array<UserGroupBelonging>}
     * @memberof User
     */
    clubs?: Array<UserGroupBelonging>;
    /**
     * 肩書き
     * @type {string}
     * @memberof User
     */
    position?: string;
    /**
     * Markdown
     * @type {string}
     * @memberof User
     */
    bio?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof User
     */
    photoUrls?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    lastModifiedAt?: Date;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "i18n" in value;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'email': json['email'],
        'role': RoleFromJSON(json['role']),
        'i18n': ((json['i18n'] as Array<any>).map(UserI18nFromJSON)),
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'pronoun': !exists(json, 'pronoun') ? undefined : PronounFromJSON(json['pronoun']),
        'birthday': !exists(json, 'birthday') ? undefined : (new Date(json['birthday'])),
        'hideAge': !exists(json, 'hideAge') ? undefined : json['hideAge'],
        'socialLinks': !exists(json, 'socialLinks') ? undefined : ((json['socialLinks'] as Array<any>).map(UserSocialLinkFromJSON)),
        'roomNumber': !exists(json, 'roomNumber') ? undefined : json['roomNumber'],
        'postNumber': !exists(json, 'postNumber') ? undefined : json['postNumber'],
        'selfIntroductionSlideUrl': !exists(json, 'selfIntroductionSlideUrl') ? undefined : json['selfIntroductionSlideUrl'],
        'programs': !exists(json, 'programs') ? undefined : ((json['programs'] as Array<any>).map(GenerationFromJSON)),
        'houses': !exists(json, 'houses') ? undefined : ((json['houses'] as Array<any>).map(GenerationFromJSON)),
        'committees': !exists(json, 'committees') ? undefined : ((json['committees'] as Array<any>).map(UserGroupBelongingFromJSON)),
        'clubs': !exists(json, 'clubs') ? undefined : ((json['clubs'] as Array<any>).map(UserGroupBelongingFromJSON)),
        'position': !exists(json, 'position') ? undefined : json['position'],
        'bio': !exists(json, 'bio') ? undefined : json['bio'],
        'photoUrls': !exists(json, 'photoUrls') ? undefined : json['photoUrls'],
        'lastModifiedAt': !exists(json, 'lastModifiedAt') ? undefined : (new Date(json['lastModifiedAt'])),
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'email': value.email,
        'role': RoleToJSON(value.role),
        'i18n': ((value.i18n as Array<any>).map(UserI18nToJSON)),
        'imageUrl': value.imageUrl,
        'pronoun': PronounToJSON(value.pronoun),
        'birthday': value.birthday === undefined ? undefined : (value.birthday.toISOString().substr(0,10)),
        'hideAge': value.hideAge,
        'socialLinks': value.socialLinks === undefined ? undefined : ((value.socialLinks as Array<any>).map(UserSocialLinkToJSON)),
        'roomNumber': value.roomNumber,
        'postNumber': value.postNumber,
        'selfIntroductionSlideUrl': value.selfIntroductionSlideUrl,
        'programs': value.programs === undefined ? undefined : ((value.programs as Array<any>).map(GenerationToJSON)),
        'houses': value.houses === undefined ? undefined : ((value.houses as Array<any>).map(GenerationToJSON)),
        'committees': value.committees === undefined ? undefined : ((value.committees as Array<any>).map(UserGroupBelongingToJSON)),
        'clubs': value.clubs === undefined ? undefined : ((value.clubs as Array<any>).map(UserGroupBelongingToJSON)),
        'position': value.position,
        'bio': value.bio,
        'photoUrls': value.photoUrls,
        'lastModifiedAt': value.lastModifiedAt === undefined ? undefined : (value.lastModifiedAt.toISOString().substr(0,10)),
    };
}

